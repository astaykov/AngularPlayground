@{
    ViewBag.Title = "Angular";
}
@section styles
{
    <link rel="stylesheet" href="@Url.Content("~/Content/ng-grid.css")" />
    <style>
        .gridStyle {
            border: 1px solid rgb(212,212,212);
            height: 300px;
        }

        .package {
            margin-left: 10px;
            padding: 3px;
            border-radius: 2px;
            margin-top: 2px;
        }

        .header {
            cursor: pointer;
        }

        .name {
            color: gray;
        }

        .array {
            background-color: #FFD8BB;
            border: thin solid #FFB780;
        }

        .object {
            background-color: #E7F1FE;
            border: thin solid #7DA2CE;
        }

        .string {
            color: red;
        }

        .number {
            color: blue;
        }

        .function {
            color: green;
        }

        .open .children {
            display: block;
        }

        .closed .children {
            display: none;
        }

        .arrow {
            background-image: url("img/d.png");
            background-repeat: no-repeat;
            background-color: transparent;
            height: 15px;
            width: 15px;
            display: inline-block;
        }

        .open .arrow {
            background-position: -20px 0;
        }

        .closed .arrow {
            background-position: 0 0;
        }

        .type {
            color: gray;
            font-size: 8pt;
            float: right;
        }

        .hide {
            display: none;
        }

    </style>
}
<h2>Angular Demo</h2>
<div class="row" ng-app="activityApp">
    <div class="col-md-4">
        <button type="button" class="btn btn-primary" id="btnVisualize">Visualize</button>
        <div id="top"></div>
    </div>
    <div class="col-md-8">
        <screen>
        </screen>
        <div class="panel panel-info" ng-controller="dataController">
            <div class="panel-body">
                <button ng-click="saveChanges('jsonData')" class="btn btn-primary">Save Changes</button>
            </div>
        </div>

        <div class="panel panel-info">
            <div class="panel-heading">JSON data</div>
            <div class="panel-body" id="jsonData">
                
            </div>
        </div>
    </div>

    <script type="text/ng-template" id="bbRadio.html">
        <div class="form-inline">
            <div class="radio" ng-repeat="option in data.source">
                <label>
                    <input type="radio"
                           ng-model="data.value"
                           ng-value="option.value"
                           ng-disabled="data.readonly">
                    {{option.text}}
                </label>
            </div>
        </div>
    </script>

    <script type="text/ng-template" id="bbCheckbox.html">
        <div class="form-inline">
            <div class="checkbox">
                <label>
                    <input type="checkbox" 
                           ng-disabled="data.readonly"
                           ng-model="data.value"
                           name="{{data.source.name}}"
                           /> {{data.source.text}}
                </label>
            </div>
        </div>
    </script>

    <script type="text/ng-template" id="bbTextArea.html">
        <textarea class="form-control" rows="5" 
                  ng-readonly="data.readonly" 
                  ng-model="data.source"></textarea>
    </script>

    <script type="text/ng-template" id="bbText.html">
        <input type="text" 
               class="form-control" 
               ng-readonly="data.readonly" 
               ng-model="data.source" />
    </script>

    <script type="text/ng-template" id="bbGrid.html">
        <div>
            <div class="gridStyle" ng-grid="gridOptions"></div>
        </div>
    </script>

</div>

@section scripts
{
    <script type="text/javascript" language="JavaScript">     
        //three types of objects
        // array
        // object
        // function
        json2 = activityData;
        var transforms = {
            'object': {
                'tag': 'div', 'class': 'package ${show} ${type}', 'children': [
                {
                    'tag': 'div', 'class': 'header', 'children': [
                    {
                        'tag': 'div', 'class': function (obj) {
                            if (getValue(obj.value) !== undefined) return ('arrow hide');
                            else return ('arrow');
                        }
                    },
                    { 'tag': 'span', 'class': 'name', 'html': '${name}' },
                    {
                        'tag': 'span', 'class': 'value', 'html': function (obj) {
                            var value = getValue(obj.value);
                            if (value !== undefined) return (" : " + value);
                            else return ('');
                        }
                    },
                    { 'tag': 'span', 'class': 'type', 'html': '${type}' }
                    ]
                },
                { 'tag': 'div', 'class': 'children', 'children': function (obj) { return (children(obj.value)); } }
                ]
            }
        };
        $(function () {
            visualize(json2);
            $('#btnVisualize').click(function () {
                //Get the value from the input field
                var json_string = JSON.stringify(activityData);//$('#inputJSON').val();
                //alert(activityData[0].title);
                //Parse the json string
                try {
                    //json
                    //var json = JSON.parse(json_string);
                    //eval
                    eval("var json=" + json_string);
                    visualize(json);
                }
                catch (e) {
                    alert("Sorry error in json string, please correct and try again: " + e.message);
                }
            });
        });
        function visualize(json) {
            $('#top').html('');
            $('#top').json2html(convert('json', json, 'open'), transforms.object);
            regEvents();
        }
        function getValue(obj) {
            var type = $.type(obj);
            //Determine if this object has children
            switch (type) {
                case 'array':
                case 'object':
                    return (undefined);
                    break;
                case 'function':
                    //none
                    return ('function');
                    break;
                case 'string':
                    return ("'" + obj + "'");
                    break;
                default:
                    return (obj);
                    break;
            }
        }
        //Transform the children
        function children(obj) {
            var type = $.type(obj);
            //Determine if this object has children
            switch (type) {
                case 'array':
                case 'object':
                    return (json2html.transform(obj, transforms.object));
                    break;
                default:
                    //This must be a litteral
                    break;
            }
        }
        function convert(name, obj, show) {
            var type = $.type(obj);
            if (show === undefined) show = 'closed';
            var children = [];
            //Determine the type of this object
            switch (type) {
                case 'array':
                    //Transform array
                    //Itterrate through the array and add it to the elements array
                    var len = obj.length;
                    for (var j = 0; j < len; ++j) {
                        //Concat the return elements from this objects tranformation
                        children[j] = convert(j, obj[j]);
                    }
                    break;
                case 'object':
                    //Transform Object
                    var j = 0;
                    for (var prop in obj) {
                        children[j] = convert(prop, obj[prop]);
                        j++;
                    }
                    break;
                default:
                    //This must be a litteral (or function)
                    children = obj;
                    break;
            }
            return ({ 'name': name, 'value': children, 'type': type, 'show': show });
        }
        function regEvents() {
            $('.header').click(function () {
                var parent = $(this).parent();
                if (parent.hasClass('closed')) {
                    parent.removeClass('closed');
                    parent.addClass('open');
                } else {
                    parent.removeClass('open');
                    parent.addClass('closed');
                }
            });
        }

    </script>
}